
7-Segmant.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003b0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000404  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000434  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000973  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006be  00000000  00000000  00000e53  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000591  00000000  00000000  00001511  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000424  00000000  00000000  00001b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000594  00000000  00000000  00001f70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002504  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ae 01 	call	0x35c	; 0x35c <main>
  64:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <SET_Direction>:
			DDRD &= 0x0F; //set 4 LSB to zero
		}

		else if(direction == OUTPUT)
		{
			DDRD &= 0xF0;  //set 4 LSB to one's
  6c:	81 30       	cpi	r24, 0x01	; 1
  6e:	19 f1       	breq	.+70     	; 0xb6 <SET_Direction+0x4a>
  70:	30 f0       	brcs	.+12     	; 0x7e <SET_Direction+0x12>
  72:	82 30       	cpi	r24, 0x02	; 2
  74:	e1 f1       	breq	.+120    	; 0xee <SET_Direction+0x82>
  76:	83 30       	cpi	r24, 0x03	; 3
  78:	09 f4       	brne	.+2      	; 0x7c <SET_Direction+0x10>
  7a:	54 c0       	rjmp	.+168    	; 0x124 <SET_Direction+0xb8>
  7c:	08 95       	ret
  7e:	41 11       	cpse	r20, r1
  80:	0c c0       	rjmp	.+24     	; 0x9a <SET_Direction+0x2e>
  82:	2a b3       	in	r18, 0x1a	; 26
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <SET_Direction+0x22>
  8a:	88 0f       	add	r24, r24
  8c:	99 1f       	adc	r25, r25
  8e:	6a 95       	dec	r22
  90:	e2 f7       	brpl	.-8      	; 0x8a <SET_Direction+0x1e>
  92:	80 95       	com	r24
  94:	82 23       	and	r24, r18
  96:	8a bb       	out	0x1a, r24	; 26
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	09 f0       	breq	.+2      	; 0xa0 <SET_Direction+0x34>
  9e:	5c c0       	rjmp	.+184    	; 0x158 <SET_Direction+0xec>
  a0:	2a b3       	in	r18, 0x1a	; 26
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	02 c0       	rjmp	.+4      	; 0xac <SET_Direction+0x40>
  a8:	88 0f       	add	r24, r24
  aa:	99 1f       	adc	r25, r25
  ac:	6a 95       	dec	r22
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <SET_Direction+0x3c>
  b0:	82 2b       	or	r24, r18
  b2:	8a bb       	out	0x1a, r24	; 26
  b4:	08 95       	ret
  b6:	41 11       	cpse	r20, r1
  b8:	0c c0       	rjmp	.+24     	; 0xd2 <SET_Direction+0x66>
  ba:	27 b3       	in	r18, 0x17	; 23
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <SET_Direction+0x5a>
  c2:	88 0f       	add	r24, r24
  c4:	99 1f       	adc	r25, r25
  c6:	6a 95       	dec	r22
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <SET_Direction+0x56>
  ca:	80 95       	com	r24
  cc:	82 23       	and	r24, r18
  ce:	87 bb       	out	0x17, r24	; 23
  d0:	08 95       	ret
  d2:	41 30       	cpi	r20, 0x01	; 1
  d4:	09 f0       	breq	.+2      	; 0xd8 <SET_Direction+0x6c>
  d6:	40 c0       	rjmp	.+128    	; 0x158 <SET_Direction+0xec>
  d8:	27 b3       	in	r18, 0x17	; 23
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	02 c0       	rjmp	.+4      	; 0xe4 <SET_Direction+0x78>
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	6a 95       	dec	r22
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <SET_Direction+0x74>
  e8:	82 2b       	or	r24, r18
  ea:	87 bb       	out	0x17, r24	; 23
  ec:	08 95       	ret
  ee:	41 11       	cpse	r20, r1
  f0:	0c c0       	rjmp	.+24     	; 0x10a <SET_Direction+0x9e>
  f2:	24 b3       	in	r18, 0x14	; 20
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <SET_Direction+0x92>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <SET_Direction+0x8e>
 102:	80 95       	com	r24
 104:	82 23       	and	r24, r18
 106:	84 bb       	out	0x14, r24	; 20
 108:	08 95       	ret
 10a:	41 30       	cpi	r20, 0x01	; 1
 10c:	29 f5       	brne	.+74     	; 0x158 <SET_Direction+0xec>
 10e:	24 b3       	in	r18, 0x14	; 20
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <SET_Direction+0xae>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <SET_Direction+0xaa>
 11e:	82 2b       	or	r24, r18
 120:	84 bb       	out	0x14, r24	; 20
 122:	08 95       	ret
 124:	41 11       	cpse	r20, r1
 126:	0c c0       	rjmp	.+24     	; 0x140 <SET_Direction+0xd4>
 128:	21 b3       	in	r18, 0x11	; 17
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	02 c0       	rjmp	.+4      	; 0x134 <SET_Direction+0xc8>
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	6a 95       	dec	r22
 136:	e2 f7       	brpl	.-8      	; 0x130 <SET_Direction+0xc4>
 138:	80 95       	com	r24
 13a:	82 23       	and	r24, r18
 13c:	81 bb       	out	0x11, r24	; 17
 13e:	08 95       	ret
 140:	41 30       	cpi	r20, 0x01	; 1
 142:	51 f4       	brne	.+20     	; 0x158 <SET_Direction+0xec>
 144:	21 b3       	in	r18, 0x11	; 17
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <SET_Direction+0xe4>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <SET_Direction+0xe0>
 154:	82 2b       	or	r24, r18
 156:	81 bb       	out	0x11, r24	; 17
 158:	08 95       	ret

0000015a <SET_Value>:
 15a:	81 30       	cpi	r24, 0x01	; 1
 15c:	19 f1       	breq	.+70     	; 0x1a4 <SET_Value+0x4a>
 15e:	30 f0       	brcs	.+12     	; 0x16c <SET_Value+0x12>
 160:	82 30       	cpi	r24, 0x02	; 2
 162:	e1 f1       	breq	.+120    	; 0x1dc <SET_Value+0x82>
 164:	83 30       	cpi	r24, 0x03	; 3
 166:	09 f4       	brne	.+2      	; 0x16a <SET_Value+0x10>
 168:	54 c0       	rjmp	.+168    	; 0x212 <SET_Value+0xb8>
 16a:	08 95       	ret
 16c:	41 11       	cpse	r20, r1
 16e:	0c c0       	rjmp	.+24     	; 0x188 <SET_Value+0x2e>
 170:	2b b3       	in	r18, 0x1b	; 27
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 c0       	rjmp	.+4      	; 0x17c <SET_Value+0x22>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	6a 95       	dec	r22
 17e:	e2 f7       	brpl	.-8      	; 0x178 <SET_Value+0x1e>
 180:	80 95       	com	r24
 182:	82 23       	and	r24, r18
 184:	8b bb       	out	0x1b, r24	; 27
 186:	08 95       	ret
 188:	41 30       	cpi	r20, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <SET_Value+0x34>
 18c:	5c c0       	rjmp	.+184    	; 0x246 <SET_Value+0xec>
 18e:	2b b3       	in	r18, 0x1b	; 27
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <SET_Value+0x40>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <SET_Value+0x3c>
 19e:	82 2b       	or	r24, r18
 1a0:	8b bb       	out	0x1b, r24	; 27
 1a2:	08 95       	ret
 1a4:	41 11       	cpse	r20, r1
 1a6:	0c c0       	rjmp	.+24     	; 0x1c0 <SET_Value+0x66>
 1a8:	28 b3       	in	r18, 0x18	; 24
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <SET_Value+0x5a>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <SET_Value+0x56>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	88 bb       	out	0x18, r24	; 24
 1be:	08 95       	ret
 1c0:	41 30       	cpi	r20, 0x01	; 1
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <SET_Value+0x6c>
 1c4:	40 c0       	rjmp	.+128    	; 0x246 <SET_Value+0xec>
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <SET_Value+0x78>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <SET_Value+0x74>
 1d6:	82 2b       	or	r24, r18
 1d8:	88 bb       	out	0x18, r24	; 24
 1da:	08 95       	ret
 1dc:	41 11       	cpse	r20, r1
 1de:	0c c0       	rjmp	.+24     	; 0x1f8 <SET_Value+0x9e>
 1e0:	25 b3       	in	r18, 0x15	; 21
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <SET_Value+0x92>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <SET_Value+0x8e>
 1f0:	80 95       	com	r24
 1f2:	82 23       	and	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	41 30       	cpi	r20, 0x01	; 1
 1fa:	29 f5       	brne	.+74     	; 0x246 <SET_Value+0xec>
 1fc:	25 b3       	in	r18, 0x15	; 21
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <SET_Value+0xae>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <SET_Value+0xaa>
 20c:	82 2b       	or	r24, r18
 20e:	85 bb       	out	0x15, r24	; 21
 210:	08 95       	ret
 212:	41 11       	cpse	r20, r1
 214:	0c c0       	rjmp	.+24     	; 0x22e <SET_Value+0xd4>
 216:	22 b3       	in	r18, 0x12	; 18
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <SET_Value+0xc8>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <SET_Value+0xc4>
 226:	80 95       	com	r24
 228:	82 23       	and	r24, r18
 22a:	82 bb       	out	0x12, r24	; 18
 22c:	08 95       	ret
 22e:	41 30       	cpi	r20, 0x01	; 1
 230:	51 f4       	brne	.+20     	; 0x246 <SET_Value+0xec>
 232:	22 b3       	in	r18, 0x12	; 18
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <SET_Value+0xe4>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <SET_Value+0xe0>
 242:	82 2b       	or	r24, r18
 244:	82 bb       	out	0x12, r24	; 18
 246:	08 95       	ret

00000248 <GET_Value>:
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	79 f0       	breq	.+30     	; 0x26a <GET_Value+0x22>
 24c:	28 f0       	brcs	.+10     	; 0x258 <GET_Value+0x10>
 24e:	82 30       	cpi	r24, 0x02	; 2
 250:	a9 f0       	breq	.+42     	; 0x27c <GET_Value+0x34>
 252:	83 30       	cpi	r24, 0x03	; 3
 254:	e1 f0       	breq	.+56     	; 0x28e <GET_Value+0x46>
 256:	24 c0       	rjmp	.+72     	; 0x2a0 <GET_Value+0x58>
 258:	89 b3       	in	r24, 0x19	; 25
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <GET_Value+0x1a>
 25e:	95 95       	asr	r25
 260:	87 95       	ror	r24
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <GET_Value+0x16>
 266:	81 70       	andi	r24, 0x01	; 1
 268:	08 95       	ret
 26a:	86 b3       	in	r24, 0x16	; 22
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <GET_Value+0x2c>
 270:	95 95       	asr	r25
 272:	87 95       	ror	r24
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <GET_Value+0x28>
 278:	81 70       	andi	r24, 0x01	; 1
 27a:	08 95       	ret
 27c:	83 b3       	in	r24, 0x13	; 19
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	02 c0       	rjmp	.+4      	; 0x286 <GET_Value+0x3e>
 282:	95 95       	asr	r25
 284:	87 95       	ror	r24
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <GET_Value+0x3a>
 28a:	81 70       	andi	r24, 0x01	; 1
 28c:	08 95       	ret
 28e:	80 b3       	in	r24, 0x10	; 16
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <GET_Value+0x50>
 294:	95 95       	asr	r25
 296:	87 95       	ror	r24
 298:	6a 95       	dec	r22
 29a:	e2 f7       	brpl	.-8      	; 0x294 <GET_Value+0x4c>
 29c:	81 70       	andi	r24, 0x01	; 1
 29e:	08 95       	ret
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	08 95       	ret

000002a4 <SET_Direction_4LSB>:
 2a4:	81 30       	cpi	r24, 0x01	; 1
 2a6:	91 f0       	breq	.+36     	; 0x2cc <SET_Direction_4LSB+0x28>
 2a8:	28 f0       	brcs	.+10     	; 0x2b4 <SET_Direction_4LSB+0x10>
 2aa:	82 30       	cpi	r24, 0x02	; 2
 2ac:	d9 f0       	breq	.+54     	; 0x2e4 <SET_Direction_4LSB+0x40>
 2ae:	83 30       	cpi	r24, 0x03	; 3
 2b0:	29 f1       	breq	.+74     	; 0x2fc <SET_Direction_4LSB+0x58>
 2b2:	08 95       	ret
 2b4:	61 11       	cpse	r22, r1
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <SET_Direction_4LSB+0x1c>
 2b8:	8a b3       	in	r24, 0x1a	; 26
 2ba:	80 7f       	andi	r24, 0xF0	; 240
 2bc:	8a bb       	out	0x1a, r24	; 26
 2be:	08 95       	ret
 2c0:	61 30       	cpi	r22, 0x01	; 1
 2c2:	39 f5       	brne	.+78     	; 0x312 <SET_Direction_4LSB+0x6e>
 2c4:	8a b3       	in	r24, 0x1a	; 26
 2c6:	8f 70       	andi	r24, 0x0F	; 15
 2c8:	8a bb       	out	0x1a, r24	; 26
 2ca:	08 95       	ret
 2cc:	61 11       	cpse	r22, r1
 2ce:	04 c0       	rjmp	.+8      	; 0x2d8 <SET_Direction_4LSB+0x34>
 2d0:	87 b3       	in	r24, 0x17	; 23
 2d2:	80 7f       	andi	r24, 0xF0	; 240
 2d4:	87 bb       	out	0x17, r24	; 23
 2d6:	08 95       	ret
 2d8:	61 30       	cpi	r22, 0x01	; 1
 2da:	d9 f4       	brne	.+54     	; 0x312 <SET_Direction_4LSB+0x6e>
 2dc:	87 b3       	in	r24, 0x17	; 23
 2de:	8f 70       	andi	r24, 0x0F	; 15
 2e0:	87 bb       	out	0x17, r24	; 23
 2e2:	08 95       	ret
 2e4:	61 11       	cpse	r22, r1
 2e6:	04 c0       	rjmp	.+8      	; 0x2f0 <SET_Direction_4LSB+0x4c>
 2e8:	84 b3       	in	r24, 0x14	; 20
 2ea:	80 7f       	andi	r24, 0xF0	; 240
 2ec:	84 bb       	out	0x14, r24	; 20
 2ee:	08 95       	ret
 2f0:	61 30       	cpi	r22, 0x01	; 1
 2f2:	79 f4       	brne	.+30     	; 0x312 <SET_Direction_4LSB+0x6e>
 2f4:	84 b3       	in	r24, 0x14	; 20
 2f6:	8f 70       	andi	r24, 0x0F	; 15
 2f8:	84 bb       	out	0x14, r24	; 20
 2fa:	08 95       	ret
 2fc:	61 11       	cpse	r22, r1
 2fe:	04 c0       	rjmp	.+8      	; 0x308 <SET_Direction_4LSB+0x64>
 300:	81 b3       	in	r24, 0x11	; 17
 302:	80 7f       	andi	r24, 0xF0	; 240
 304:	81 bb       	out	0x11, r24	; 17
 306:	08 95       	ret
 308:	61 30       	cpi	r22, 0x01	; 1
 30a:	19 f4       	brne	.+6      	; 0x312 <SET_Direction_4LSB+0x6e>
 30c:	81 b3       	in	r24, 0x11	; 17
 30e:	8f 70       	andi	r24, 0x0F	; 15
 310:	81 bb       	out	0x11, r24	; 17
 312:	08 95       	ret

00000314 <SET_Value_4LSB>:


/*   Function to set the value of the 4LSB pins    */
void SET_Value_4LSB(u8 port, u8 value)
{
	switch(port)
 314:	81 30       	cpi	r24, 0x01	; 1
 316:	69 f0       	breq	.+26     	; 0x332 <SET_Value_4LSB+0x1e>
 318:	28 f0       	brcs	.+10     	; 0x324 <SET_Value_4LSB+0x10>
 31a:	82 30       	cpi	r24, 0x02	; 2
 31c:	89 f0       	breq	.+34     	; 0x340 <SET_Value_4LSB+0x2c>
 31e:	83 30       	cpi	r24, 0x03	; 3
 320:	b1 f0       	breq	.+44     	; 0x34e <SET_Value_4LSB+0x3a>
 322:	08 95       	ret
	{
	case PORT_A:
			PORTA &= 0xF0;
 324:	8b b3       	in	r24, 0x1b	; 27
 326:	80 7f       	andi	r24, 0xF0	; 240
 328:	8b bb       	out	0x1b, r24	; 27
			PORTA |= value;
 32a:	8b b3       	in	r24, 0x1b	; 27
 32c:	68 2b       	or	r22, r24
 32e:	6b bb       	out	0x1b, r22	; 27
		break;
 330:	08 95       	ret

	case PORT_B:
			PORTB &= 0xF0;
 332:	88 b3       	in	r24, 0x18	; 24
 334:	80 7f       	andi	r24, 0xF0	; 240
 336:	88 bb       	out	0x18, r24	; 24
			PORTB |= value;
 338:	88 b3       	in	r24, 0x18	; 24
 33a:	68 2b       	or	r22, r24
 33c:	68 bb       	out	0x18, r22	; 24
			break;
 33e:	08 95       	ret
			
	case PORT_C:
			PORTC &= 0xF0;
 340:	85 b3       	in	r24, 0x15	; 21
 342:	80 7f       	andi	r24, 0xF0	; 240
 344:	85 bb       	out	0x15, r24	; 21
			PORTC |= value;
 346:	85 b3       	in	r24, 0x15	; 21
 348:	68 2b       	or	r22, r24
 34a:	65 bb       	out	0x15, r22	; 21
			break;
 34c:	08 95       	ret

	case PORT_D:
			PORTD &= 0xF0;
 34e:	82 b3       	in	r24, 0x12	; 18
 350:	80 7f       	andi	r24, 0xF0	; 240
 352:	82 bb       	out	0x12, r24	; 18
			PORTD |= value;
 354:	82 b3       	in	r24, 0x12	; 18
 356:	68 2b       	or	r22, r24
 358:	62 bb       	out	0x12, r22	; 18
 35a:	08 95       	ret

0000035c <main>:
#define F_CPU 8000000UL //1MHz Clock frequency
#include <util/delay.h>  // For delay function

int main()
{
	SET_Direction(PORT_A,PIN_2,INPUT);  
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	62 e0       	ldi	r22, 0x02	; 2
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	0e 94 36 00 	call	0x6c	; 0x6c <SET_Direction>
	SET_Direction_4LSB(PORT_C,OUTPUT);  
 366:	61 e0       	ldi	r22, 0x01	; 1
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <SET_Direction_4LSB>
 
	SET_Value(PORT_A, PIN_2, HIGH); 
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	62 e0       	ldi	r22, 0x02	; 2
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 ad 00 	call	0x15a	; 0x15a <SET_Value>
	
	u8 Current_number =0;
 378:	c0 e0       	ldi	r28, 0x00	; 0
	
	while(1)
	{
		
		if(GET_Value(PORT_A,PIN_2) == LOW)
 37a:	62 e0       	ldi	r22, 0x02	; 2
 37c:	80 e0       	ldi	r24, 0x00	; 0
 37e:	0e 94 24 01 	call	0x248	; 0x248 <GET_Value>
 382:	81 11       	cpse	r24, r1
 384:	05 c0       	rjmp	.+10     	; 0x390 <main+0x34>
		   {
			   if(Current_number == 9) //to reset numbers to zero after reach 9
 386:	c9 30       	cpi	r28, 0x09	; 9
 388:	11 f0       	breq	.+4      	; 0x38e <main+0x32>
			      {
				    Current_number = 0;
			      }
			   else
			      {
			 	    Current_number++;
 38a:	cf 5f       	subi	r28, 0xFF	; 255
 38c:	01 c0       	rjmp	.+2      	; 0x390 <main+0x34>
		
		if(GET_Value(PORT_A,PIN_2) == LOW)
		   {
			   if(Current_number == 9) //to reset numbers to zero after reach 9
			      {
				    Current_number = 0;
 38e:	c0 e0       	ldi	r28, 0x00	; 0
			      {
			 	    Current_number++;
			      }
		   }
      
	  SET_Value_4LSB(PORT_C, Current_number);
 390:	6c 2f       	mov	r22, r28
 392:	82 e0       	ldi	r24, 0x02	; 2
 394:	0e 94 8a 01 	call	0x314	; 0x314 <SET_Value_4LSB>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 398:	2f ef       	ldi	r18, 0xFF	; 255
 39a:	81 ee       	ldi	r24, 0xE1	; 225
 39c:	94 e0       	ldi	r25, 0x04	; 4
 39e:	21 50       	subi	r18, 0x01	; 1
 3a0:	80 40       	sbci	r24, 0x00	; 0
 3a2:	90 40       	sbci	r25, 0x00	; 0
 3a4:	e1 f7       	brne	.-8      	; 0x39e <main+0x42>
 3a6:	00 c0       	rjmp	.+0      	; 0x3a8 <main+0x4c>
 3a8:	00 00       	nop
 3aa:	e7 cf       	rjmp	.-50     	; 0x37a <main+0x1e>

000003ac <_exit>:
 3ac:	f8 94       	cli

000003ae <__stop_program>:
 3ae:	ff cf       	rjmp	.-2      	; 0x3ae <__stop_program>

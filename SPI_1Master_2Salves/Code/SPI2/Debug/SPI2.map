Archive member included to satisfy reference by file (symbol)

/usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
                              /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
LOAD ./DIO_Program.o
LOAD ./SPI_Program.o
LOAD ./main.o
START GROUP
LOAD /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a
LOAD /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/libm.a
LOAD /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/libc.a
LOAD /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xafe
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000060        0x8 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x0000000000000068        0x4 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000068                __vector_20
                0x0000000000000068                __vector_12
                0x0000000000000068                __bad_interrupt
                0x0000000000000068                __vector_6
                0x0000000000000068                __vector_3
                0x0000000000000068                __vector_11
                0x0000000000000068                __vector_13
                0x0000000000000068                __vector_17
                0x0000000000000068                __vector_19
                0x0000000000000068                __vector_7
                0x0000000000000068                __vector_5
                0x0000000000000068                __vector_4
                0x0000000000000068                __vector_9
                0x0000000000000068                __vector_2
                0x0000000000000068                __vector_15
                0x0000000000000068                __vector_8
                0x0000000000000068                __vector_14
                0x0000000000000068                __vector_10
                0x0000000000000068                __vector_16
                0x0000000000000068                __vector_18
                0x0000000000000068                __vector_1
 .text          0x000000000000006c        0x0 ./DIO_Program.o
 .text          0x000000000000006c        0x0 ./SPI_Program.o
 .text          0x000000000000006c        0x0 ./main.o
 .text          0x000000000000006c        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
                0x000000000000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.SET_Direction
                0x000000000000006c      0x1f6 ./DIO_Program.o
                0x000000000000006c                SET_Direction
 .text.SET_Value
                0x0000000000000262      0x1f6 ./DIO_Program.o
                0x0000000000000262                SET_Value
 .text.GET_Value
                0x0000000000000458       0xbe ./DIO_Program.o
                0x0000000000000458                GET_Value
 .text.SET_Direction_4LSB
                0x0000000000000516      0x122 ./DIO_Program.o
                0x0000000000000516                SET_Direction_4LSB
 .text.SET_Value_4LSB
                0x0000000000000638       0xde ./DIO_Program.o
                0x0000000000000638                SET_Value_4LSB
 .text.SET_Direction_4MSB
                0x0000000000000716      0x122 ./DIO_Program.o
                0x0000000000000716                SET_Direction_4MSB
 .text.SET_Value_4MSB
                0x0000000000000838      0x12a ./DIO_Program.o
                0x0000000000000838                SET_Value_4MSB
 .text.SPI_Init_Master
                0x0000000000000962       0xa0 ./SPI_Program.o
                0x0000000000000962                SPI_Init_Master
 .text.SPI_Init_Slave
                0x0000000000000a02       0x6a ./SPI_Program.o
                0x0000000000000a02                SPI_Init_Slave
 .text.SPI_SendData
                0x0000000000000a6c       0x42 ./SPI_Program.o
                0x0000000000000a6c                SPI_SendData
 .text.main     0x0000000000000aae       0x4c ./main.o
                0x0000000000000aae                main
 .text.libgcc.mul
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000000afa                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000afa        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000000afa                exit
                0x0000000000000afa                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000afa        0x4 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000afe                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000afe                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000afe
                [!provide]                        PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./DIO_Program.o
 .data          0x0000000000800060        0x0 ./SPI_Program.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end = .)

.bss            0x0000000000800060        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800060        0x0 ./DIO_Program.o
 .bss           0x0000000000800060        0x0 ./SPI_Program.o
 .bss           0x0000000000800060        0x0 ./main.o
 .bss           0x0000000000800060        0x0 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x0000000000000afe                __data_load_start = LOADADDR (.data)
                0x0000000000000afe                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800060                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1410
 *(.stab)
 .stab          0x0000000000000000      0xd2c ./DIO_Program.o
 .stab          0x0000000000000d2c      0x3e4 ./SPI_Program.o
                                        0x45c (size before relaxing)
 .stab          0x0000000000001110      0x300 ./main.o
                                        0x3b4 (size before relaxing)

.stabstr        0x0000000000000000      0xa42
 *(.stabstr)
 .stabstr       0x0000000000000000      0xa42 ./DIO_Program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x26
 *(.comment)
 .comment       0x0000000000000000       0x26 ./DIO_Program.o
                                         0x27 (size before relaxing)
 .comment       0x0000000000000026       0x27 ./SPI_Program.o
 .comment       0x0000000000000026       0x27 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x50c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_info    0x00000000000004e6       0x26 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)

.debug_abbrev   0x0000000000000000      0x4b7
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_abbrev  0x00000000000004a3       0x14 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)

.debug_line     0x0000000000000000       0x7e
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_line    0x000000000000001d       0x61 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x21c
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/../../../../../../avr/lib/avr5/crtatmega32.o
 .debug_str     0x0000000000000196       0x86 /usr/local/Cellar/avr-gcc@8/8.4.0_2/lib/avr-gcc/8/gcc/avr/8.4.0/avr5/libgcc.a(_exit.o)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
OUTPUT(SPI2.elf elf32-avr)
LOAD linker stubs
